@use "abstracts/variables" as vars;
@use "abstracts/mixins" as mix;

.hero {
  position: relative;
  min-height: 100vh;

  .swiper-slide {
    width: 100%;
    height: 100vh; /* ocupa toda la ventana */
    background-size: cover;
    background-position: center;

    // Centrado total del contenido dentro del slide
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .swiper-slide::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4); /* 40% black overlay */
    z-index: 1;
  }

  .hero-content {
    position: relative; /* sits above overlay */
    z-index: 2;
    text-align: center;
    padding: 0 1rem;
    color: vars.$color-blanco; /* o #fff */

    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);

    h1 {
      font-size: 2.5rem;
      margin-bottom: 1rem;

      @include mix.respond-to(sm) {
        font-size: 3rem;
      }
      @include mix.respond-to(md) {
        font-size: 3.5rem;
      }
      @include mix.respond-to(lg) {
        font-size: 4rem;
      }
    }

    p {
      font-size: 1rem;
      margin-bottom: 2rem;

      @include mix.respond-to(sm) {
        font-size: 1.125rem;
      }
      @include mix.respond-to(md) {
        font-size: 1.25rem;
      }
      @include mix.respond-to(lg) {
        font-size: 1.5rem;
      }
    }

    .btn-cta {
      background: vars.$color-secundario;
      color: vars.$color-blanco;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 0.5rem;
      text-decoration: none;
      font-size: 1rem;
      transition: background 0.3s ease, transform 0.3s ease;

      &:hover,
      &:focus {
        background: vars.$color-acento;
        transform: translateY(-2px);
      }
    }
  }
}
